{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n// import { createStore } from \"redux\";\n\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    }\n    // increase(state, action){\n    //     state.counter = state.counter + action.payload\n    // },\n    // decrement(state){\n    //     state.counter--;\n    // },\n    // reset(state){\n    //     state.counter = 0\n    // },\n    // toggleCounter(state){\n    //     state.showCounter = !state.showCounter\n    // },\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment') {\n//         return {\n//             showCounter:state.showCounter,\n//             counter: state.counter + 1,\n\n//         }\n//     }\n//     if (action.type === 'decrement') {\n//         return {\n//             showCounter:state.showCounter,\n//             counter: state.counter - 1,\n//         }\n//     }\n//     if (action.type === 'reset') {\n//         return {\n//             showCounter:state.showCounter,\n//             counter: state.counter = 0,\n//         }\n//     }\n//     if (action.type === 'toggle') {\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n//     return state;\n// }\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","store","reducer","counterActions","actions"],"sources":["C:/Users/Admin/Desktop/VETRI/Mid-Level-II/Redux-Toolkit/src/store/index..js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n// import { createStore } from \"redux\";\r\n\r\nconst initialState = {counter:0, showCounter:true};\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        // increase(state, action){\r\n        //     state.counter = state.counter + action.payload\r\n        // },\r\n        // decrement(state){\r\n        //     state.counter--;\r\n        // },\r\n        // reset(state){\r\n        //     state.counter = 0\r\n        // },\r\n        // toggleCounter(state){\r\n        //     state.showCounter = !state.showCounter\r\n        // },\r\n    }\r\n})\r\n\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if(action.type === 'increment') {\r\n//         return {\r\n//             showCounter:state.showCounter,\r\n//             counter: state.counter + 1,\r\n            \r\n//         }\r\n//     }\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             showCounter:state.showCounter,\r\n//             counter: state.counter - 1,\r\n//         }\r\n//     }\r\n//     if (action.type === 'reset') {\r\n//         return {\r\n//             showCounter:state.showCounter,\r\n//             counter: state.counter = 0,\r\n//         }\r\n//     }\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             showCounter: !state.showCounter,\r\n//             counter: state.counter\r\n//         }\r\n//     }\r\n//     return state;\r\n// }\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {counter: counterSlice.reducer}\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D;;AAEA,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC;AAElD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AACJ,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMO,KAAK,GAAGT,cAAc,CAAC;EACzBU,OAAO,EAAE;IAACR,OAAO,EAAEE,YAAY,CAACM;EAAO;AAC3C,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGP,YAAY,CAACQ,OAAO;AAGlD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}